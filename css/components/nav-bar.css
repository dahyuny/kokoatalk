.nav {
  position: fixed;
  bottom: 0;
  width: 100%;
  background-color: #f9f9fa;
  padding: 20px 50px;
  box-sizing: border-box;
  /* ㄴ 박스 안으로 무조건 배치시킴 // padding 값을 무시*/
  border-top: 1px solid rgba(121, 121, 121, 0.2);
}

.nav__list {
  display: flex;
  justify-content: space-between;
}

.nav__link {
  color: #2e363e;
  position: relative;
}

@keyframes notificationAnimation {
  0% {
    transform: none;
  }
  50% {
    transform: translateY(-5px);
  }
  /* animation에서 rotateY(360deg)하면 360도 회전*/
  100% {
    transform: none;
  }
}

.nav__notification {
  position: absolute;
  /* ㄴ 이 조건은 부모에 position: relative가 있어야 함 */
  left: 15px;
  bottom: 15px;
  /* span은 box가 아니라 inline이기 때문에 너비 높이가 먹히지 않으므로 diplay:block으로 해결
  but display flex로 같은 문제를 해결할 수 있다(두개 같이 사용X) */
  animation: notificationAnimation 1.5s ease-in-out infinite;
}

@keyframes appearBtnAnimation {
  from {
    transform: translatey(25px);
    opacity: 0;
  }
  to {
    transform: none;
    opacity: 1;
  }
}

.nav__btn {
  animation: appearBtnAnimation 1s ease-in-out;
}

.nav__updatedot {
  position: absolute;
  background-color: tomato;
  width: 6px;
  height: 6px;
  border-radius: 3px;
  left: 30px;
  bottom: 30px;
  animation: appearBtnAnimation 1s ease-in-out;
}

@keyframes appearBtnAnimation {
  from {
    opacity: 0;
  }
  to {
    transform: none;
    opacity: 1;
  }
}

/* 
.nav__btn {
  transform: translatey(25px);
  ㄴ 시작부터 animation이 적용되게 하기 위해 keyframes가 아닌 nav 자체에 넣음
  opacity: 0;
  animation: appearBtnAnimation 0.3s ease-in-out forwards;
}
.nav__btn:nth-child(2) {
  animation-delay: 0.3s;
}
.nav__btn:nth-child(3) {
  animation-delay: 0.6s;
}
.nav__btn:last-child {
  animation-delay: 0.9s;
} 
*/
